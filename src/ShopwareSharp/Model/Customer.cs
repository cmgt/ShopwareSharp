// <auto-generated>
/*
 * Shopware Store API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.4.9999999.9999999-dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;

namespace ShopwareSharp.Model
{
    /// <summary>
    /// Added since version: 6.0.0.0
    /// </summary>
    public partial class Customer : IEquatable<Customer>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Customer" /> class.
        /// </summary>
        /// <param name="groupId">groupId (required)</param>
        /// <param name="defaultPaymentMethodId">defaultPaymentMethodId (required)</param>
        /// <param name="salesChannelId">salesChannelId (required)</param>
        /// <param name="languageId">languageId (required)</param>
        /// <param name="defaultBillingAddressId">defaultBillingAddressId (required)</param>
        /// <param name="defaultShippingAddressId">defaultShippingAddressId (required)</param>
        /// <param name="customerNumber">customerNumber (required)</param>
        /// <param name="salutationId">salutationId (required)</param>
        /// <param name="firstName">firstName (required)</param>
        /// <param name="lastName">lastName (required)</param>
        /// <param name="email">email (required)</param>
        /// <param name="createdAt">createdAt (required)</param>
        /// <param name="id">id</param>
        /// <param name="lastPaymentMethodId">lastPaymentMethodId</param>
        /// <param name="company">company</param>
        /// <param name="title">title</param>
        /// <param name="vatIds">vatIds</param>
        /// <param name="affiliateCode">affiliateCode</param>
        /// <param name="campaignCode">campaignCode</param>
        /// <param name="active">active</param>
        /// <param name="doubleOptInRegistration">doubleOptInRegistration</param>
        /// <param name="doubleOptInEmailSentDate">doubleOptInEmailSentDate</param>
        /// <param name="doubleOptInConfirmDate">doubleOptInConfirmDate</param>
        /// <param name="hash">hash</param>
        /// <param name="guest">guest</param>
        /// <param name="firstLogin">firstLogin</param>
        /// <param name="lastLogin">lastLogin</param>
        /// <param name="newsletter">newsletter</param>
        /// <param name="birthday">birthday</param>
        /// <param name="lastOrderDate">lastOrderDate</param>
        /// <param name="orderCount">orderCount</param>
        /// <param name="customFields">customFields</param>
        /// <param name="tagIds">tagIds</param>
        /// <param name="updatedAt">updatedAt</param>
        /// <param name="group">group</param>
        /// <param name="defaultPaymentMethod">defaultPaymentMethod</param>
        /// <param name="language">language</param>
        /// <param name="lastPaymentMethod">lastPaymentMethod</param>
        /// <param name="defaultBillingAddress">defaultBillingAddress</param>
        /// <param name="defaultShippingAddress">defaultShippingAddress</param>
        /// <param name="salutation">salutation</param>
        /// <param name="addresses">addresses</param>
        public Customer(string groupId, string defaultPaymentMethodId, string salesChannelId, string languageId, string defaultBillingAddressId, string defaultShippingAddressId, string customerNumber, string salutationId, string firstName, string lastName, string email, DateTime createdAt, string? id = default, string? lastPaymentMethodId = default, string? company = default, string? title = default, List<string>? vatIds = default, string? affiliateCode = default, string? campaignCode = default, bool? active = default, bool? doubleOptInRegistration = default, DateTime? doubleOptInEmailSentDate = default, DateTime? doubleOptInConfirmDate = default, string? hash = default, bool? guest = default, DateTime? firstLogin = default, DateTime? lastLogin = default, bool? newsletter = default, string? birthday = default, DateTime? lastOrderDate = default, long? orderCount = default, Object? customFields = default, List<string>? tagIds = default, DateTime? updatedAt = default, CustomerGroup? group = default, PaymentMethod? defaultPaymentMethod = default, Language? language = default, PaymentMethod? lastPaymentMethod = default, CustomerAddress? defaultBillingAddress = default, CustomerAddress? defaultShippingAddress = default, Salutation? salutation = default, CustomerAddress? addresses = default)
        {
            if (groupId == null)
                throw new ArgumentNullException("groupId is a required property for Customer and cannot be null.");

            if (defaultPaymentMethodId == null)
                throw new ArgumentNullException("defaultPaymentMethodId is a required property for Customer and cannot be null.");

            if (salesChannelId == null)
                throw new ArgumentNullException("salesChannelId is a required property for Customer and cannot be null.");

            if (languageId == null)
                throw new ArgumentNullException("languageId is a required property for Customer and cannot be null.");

            if (defaultBillingAddressId == null)
                throw new ArgumentNullException("defaultBillingAddressId is a required property for Customer and cannot be null.");

            if (defaultShippingAddressId == null)
                throw new ArgumentNullException("defaultShippingAddressId is a required property for Customer and cannot be null.");

            if (customerNumber == null)
                throw new ArgumentNullException("customerNumber is a required property for Customer and cannot be null.");

            if (salutationId == null)
                throw new ArgumentNullException("salutationId is a required property for Customer and cannot be null.");

            if (firstName == null)
                throw new ArgumentNullException("firstName is a required property for Customer and cannot be null.");

            if (lastName == null)
                throw new ArgumentNullException("lastName is a required property for Customer and cannot be null.");

            if (email == null)
                throw new ArgumentNullException("email is a required property for Customer and cannot be null.");

            if (createdAt == null)
                throw new ArgumentNullException("createdAt is a required property for Customer and cannot be null.");

            GroupId = groupId;
            DefaultPaymentMethodId = defaultPaymentMethodId;
            SalesChannelId = salesChannelId;
            LanguageId = languageId;
            DefaultBillingAddressId = defaultBillingAddressId;
            DefaultShippingAddressId = defaultShippingAddressId;
            CustomerNumber = customerNumber;
            SalutationId = salutationId;
            FirstName = firstName;
            LastName = lastName;
            Email = email;
            CreatedAt = createdAt;
            Id = id;
            LastPaymentMethodId = lastPaymentMethodId;
            Company = company;
            Title = title;
            VatIds = vatIds;
            AffiliateCode = affiliateCode;
            CampaignCode = campaignCode;
            Active = active;
            DoubleOptInRegistration = doubleOptInRegistration;
            DoubleOptInEmailSentDate = doubleOptInEmailSentDate;
            DoubleOptInConfirmDate = doubleOptInConfirmDate;
            Hash = hash;
            Guest = guest;
            FirstLogin = firstLogin;
            LastLogin = lastLogin;
            Newsletter = newsletter;
            Birthday = birthday;
            LastOrderDate = lastOrderDate;
            OrderCount = orderCount;
            CustomFields = customFields;
            TagIds = tagIds;
            UpdatedAt = updatedAt;
            Group = group;
            DefaultPaymentMethod = defaultPaymentMethod;
            Language = language;
            LastPaymentMethod = lastPaymentMethod;
            DefaultBillingAddress = defaultBillingAddress;
            DefaultShippingAddress = defaultShippingAddress;
            Salutation = salutation;
            Addresses = addresses;
        }

        /// <summary>
        /// Gets or Sets GroupId
        /// </summary>
        [JsonPropertyName("groupId")]
        public string GroupId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPaymentMethodId
        /// </summary>
        [JsonPropertyName("defaultPaymentMethodId")]
        public string DefaultPaymentMethodId { get; set; }

        /// <summary>
        /// Gets or Sets SalesChannelId
        /// </summary>
        [JsonPropertyName("salesChannelId")]
        public string SalesChannelId { get; set; }

        /// <summary>
        /// Gets or Sets LanguageId
        /// </summary>
        [JsonPropertyName("languageId")]
        public string LanguageId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultBillingAddressId
        /// </summary>
        [JsonPropertyName("defaultBillingAddressId")]
        public string DefaultBillingAddressId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultShippingAddressId
        /// </summary>
        [JsonPropertyName("defaultShippingAddressId")]
        public string DefaultShippingAddressId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerNumber
        /// </summary>
        [JsonPropertyName("customerNumber")]
        public string CustomerNumber { get; set; }

        /// <summary>
        /// Gets or Sets SalutationId
        /// </summary>
        [JsonPropertyName("salutationId")]
        public string SalutationId { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [JsonPropertyName("firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [JsonPropertyName("lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [JsonPropertyName("createdAt")]
        public DateTime CreatedAt { get; private set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [JsonPropertyName("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Gets or Sets LastPaymentMethodId
        /// </summary>
        [JsonPropertyName("lastPaymentMethodId")]
        public string? LastPaymentMethodId { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [JsonPropertyName("company")]
        public string? Company { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [JsonPropertyName("title")]
        public string? Title { get; set; }

        /// <summary>
        /// Gets or Sets VatIds
        /// </summary>
        [JsonPropertyName("vatIds")]
        public List<string>? VatIds { get; set; }

        /// <summary>
        /// Gets or Sets AffiliateCode
        /// </summary>
        [JsonPropertyName("affiliateCode")]
        public string? AffiliateCode { get; set; }

        /// <summary>
        /// Gets or Sets CampaignCode
        /// </summary>
        [JsonPropertyName("campaignCode")]
        public string? CampaignCode { get; set; }

        /// <summary>
        /// Gets or Sets Active
        /// </summary>
        [JsonPropertyName("active")]
        public bool? Active { get; set; }

        /// <summary>
        /// Gets or Sets DoubleOptInRegistration
        /// </summary>
        [JsonPropertyName("doubleOptInRegistration")]
        public bool? DoubleOptInRegistration { get; set; }

        /// <summary>
        /// Gets or Sets DoubleOptInEmailSentDate
        /// </summary>
        [JsonPropertyName("doubleOptInEmailSentDate")]
        public DateTime? DoubleOptInEmailSentDate { get; set; }

        /// <summary>
        /// Gets or Sets DoubleOptInConfirmDate
        /// </summary>
        [JsonPropertyName("doubleOptInConfirmDate")]
        public DateTime? DoubleOptInConfirmDate { get; set; }

        /// <summary>
        /// Gets or Sets Hash
        /// </summary>
        [JsonPropertyName("hash")]
        public string? Hash { get; set; }

        /// <summary>
        /// Gets or Sets Guest
        /// </summary>
        [JsonPropertyName("guest")]
        public bool? Guest { get; set; }

        /// <summary>
        /// Gets or Sets FirstLogin
        /// </summary>
        [JsonPropertyName("firstLogin")]
        public DateTime? FirstLogin { get; set; }

        /// <summary>
        /// Gets or Sets LastLogin
        /// </summary>
        [JsonPropertyName("lastLogin")]
        public DateTime? LastLogin { get; set; }

        /// <summary>
        /// Gets or Sets Newsletter
        /// </summary>
        [JsonPropertyName("newsletter")]
        public bool? Newsletter { get; set; }

        /// <summary>
        /// Gets or Sets Birthday
        /// </summary>
        [JsonPropertyName("birthday")]
        public string? Birthday { get; set; }

        /// <summary>
        /// Gets or Sets LastOrderDate
        /// </summary>
        [JsonPropertyName("lastOrderDate")]
        public DateTime? LastOrderDate { get; private set; }

        /// <summary>
        /// Gets or Sets OrderCount
        /// </summary>
        [JsonPropertyName("orderCount")]
        public long? OrderCount { get; private set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [JsonPropertyName("customFields")]
        public Object? CustomFields { get; set; }

        /// <summary>
        /// Gets or Sets TagIds
        /// </summary>
        [JsonPropertyName("tagIds")]
        public List<string>? TagIds { get; private set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [JsonPropertyName("updatedAt")]
        public DateTime? UpdatedAt { get; private set; }

        /// <summary>
        /// Gets or Sets Group
        /// </summary>
        [JsonPropertyName("group")]
        public CustomerGroup? Group { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPaymentMethod
        /// </summary>
        [JsonPropertyName("defaultPaymentMethod")]
        public PaymentMethod? DefaultPaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [JsonPropertyName("language")]
        public Language? Language { get; set; }

        /// <summary>
        /// Gets or Sets LastPaymentMethod
        /// </summary>
        [JsonPropertyName("lastPaymentMethod")]
        public PaymentMethod? LastPaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets DefaultBillingAddress
        /// </summary>
        [JsonPropertyName("defaultBillingAddress")]
        public CustomerAddress? DefaultBillingAddress { get; set; }

        /// <summary>
        /// Gets or Sets DefaultShippingAddress
        /// </summary>
        [JsonPropertyName("defaultShippingAddress")]
        public CustomerAddress? DefaultShippingAddress { get; set; }

        /// <summary>
        /// Gets or Sets Salutation
        /// </summary>
        [JsonPropertyName("salutation")]
        public Salutation? Salutation { get; set; }

        /// <summary>
        /// Gets or Sets Addresses
        /// </summary>
        [JsonPropertyName("addresses")]
        public CustomerAddress? Addresses { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Customer {\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  DefaultPaymentMethodId: ").Append(DefaultPaymentMethodId).Append("\n");
            sb.Append("  SalesChannelId: ").Append(SalesChannelId).Append("\n");
            sb.Append("  LanguageId: ").Append(LanguageId).Append("\n");
            sb.Append("  DefaultBillingAddressId: ").Append(DefaultBillingAddressId).Append("\n");
            sb.Append("  DefaultShippingAddressId: ").Append(DefaultShippingAddressId).Append("\n");
            sb.Append("  CustomerNumber: ").Append(CustomerNumber).Append("\n");
            sb.Append("  SalutationId: ").Append(SalutationId).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LastPaymentMethodId: ").Append(LastPaymentMethodId).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  VatIds: ").Append(VatIds).Append("\n");
            sb.Append("  AffiliateCode: ").Append(AffiliateCode).Append("\n");
            sb.Append("  CampaignCode: ").Append(CampaignCode).Append("\n");
            sb.Append("  Active: ").Append(Active).Append("\n");
            sb.Append("  DoubleOptInRegistration: ").Append(DoubleOptInRegistration).Append("\n");
            sb.Append("  DoubleOptInEmailSentDate: ").Append(DoubleOptInEmailSentDate).Append("\n");
            sb.Append("  DoubleOptInConfirmDate: ").Append(DoubleOptInConfirmDate).Append("\n");
            sb.Append("  Hash: ").Append(Hash).Append("\n");
            sb.Append("  Guest: ").Append(Guest).Append("\n");
            sb.Append("  FirstLogin: ").Append(FirstLogin).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  Newsletter: ").Append(Newsletter).Append("\n");
            sb.Append("  Birthday: ").Append(Birthday).Append("\n");
            sb.Append("  LastOrderDate: ").Append(LastOrderDate).Append("\n");
            sb.Append("  OrderCount: ").Append(OrderCount).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("  TagIds: ").Append(TagIds).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  Group: ").Append(Group).Append("\n");
            sb.Append("  DefaultPaymentMethod: ").Append(DefaultPaymentMethod).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  LastPaymentMethod: ").Append(LastPaymentMethod).Append("\n");
            sb.Append("  DefaultBillingAddress: ").Append(DefaultBillingAddress).Append("\n");
            sb.Append("  DefaultShippingAddress: ").Append(DefaultShippingAddress).Append("\n");
            sb.Append("  Salutation: ").Append(Salutation).Append("\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object? input)
        {
            return this.Equals(input as Customer);
        }

        /// <summary>
        /// Returns true if Customer instances are equal
        /// </summary>
        /// <param name="input">Instance of Customer to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Customer? input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.GroupId == input.GroupId ||
                    (this.GroupId != null &&
                    this.GroupId.Equals(input.GroupId))
                ) && 
                (
                    this.DefaultPaymentMethodId == input.DefaultPaymentMethodId ||
                    (this.DefaultPaymentMethodId != null &&
                    this.DefaultPaymentMethodId.Equals(input.DefaultPaymentMethodId))
                ) && 
                (
                    this.SalesChannelId == input.SalesChannelId ||
                    (this.SalesChannelId != null &&
                    this.SalesChannelId.Equals(input.SalesChannelId))
                ) && 
                (
                    this.LanguageId == input.LanguageId ||
                    (this.LanguageId != null &&
                    this.LanguageId.Equals(input.LanguageId))
                ) && 
                (
                    this.DefaultBillingAddressId == input.DefaultBillingAddressId ||
                    (this.DefaultBillingAddressId != null &&
                    this.DefaultBillingAddressId.Equals(input.DefaultBillingAddressId))
                ) && 
                (
                    this.DefaultShippingAddressId == input.DefaultShippingAddressId ||
                    (this.DefaultShippingAddressId != null &&
                    this.DefaultShippingAddressId.Equals(input.DefaultShippingAddressId))
                ) && 
                (
                    this.CustomerNumber == input.CustomerNumber ||
                    (this.CustomerNumber != null &&
                    this.CustomerNumber.Equals(input.CustomerNumber))
                ) && 
                (
                    this.SalutationId == input.SalutationId ||
                    (this.SalutationId != null &&
                    this.SalutationId.Equals(input.SalutationId))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.LastPaymentMethodId == input.LastPaymentMethodId ||
                    (this.LastPaymentMethodId != null &&
                    this.LastPaymentMethodId.Equals(input.LastPaymentMethodId))
                ) && 
                (
                    this.Company == input.Company ||
                    (this.Company != null &&
                    this.Company.Equals(input.Company))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.VatIds == input.VatIds ||
                    this.VatIds != null &&
                    input.VatIds != null &&
                    this.VatIds.SequenceEqual(input.VatIds)
                ) && 
                (
                    this.AffiliateCode == input.AffiliateCode ||
                    (this.AffiliateCode != null &&
                    this.AffiliateCode.Equals(input.AffiliateCode))
                ) && 
                (
                    this.CampaignCode == input.CampaignCode ||
                    (this.CampaignCode != null &&
                    this.CampaignCode.Equals(input.CampaignCode))
                ) && 
                (
                    this.Active == input.Active ||
                    this.Active.Equals(input.Active)
                ) && 
                (
                    this.DoubleOptInRegistration == input.DoubleOptInRegistration ||
                    this.DoubleOptInRegistration.Equals(input.DoubleOptInRegistration)
                ) && 
                (
                    this.DoubleOptInEmailSentDate == input.DoubleOptInEmailSentDate ||
                    (this.DoubleOptInEmailSentDate != null &&
                    this.DoubleOptInEmailSentDate.Equals(input.DoubleOptInEmailSentDate))
                ) && 
                (
                    this.DoubleOptInConfirmDate == input.DoubleOptInConfirmDate ||
                    (this.DoubleOptInConfirmDate != null &&
                    this.DoubleOptInConfirmDate.Equals(input.DoubleOptInConfirmDate))
                ) && 
                (
                    this.Hash == input.Hash ||
                    (this.Hash != null &&
                    this.Hash.Equals(input.Hash))
                ) && 
                (
                    this.Guest == input.Guest ||
                    this.Guest.Equals(input.Guest)
                ) && 
                (
                    this.FirstLogin == input.FirstLogin ||
                    (this.FirstLogin != null &&
                    this.FirstLogin.Equals(input.FirstLogin))
                ) && 
                (
                    this.LastLogin == input.LastLogin ||
                    (this.LastLogin != null &&
                    this.LastLogin.Equals(input.LastLogin))
                ) && 
                (
                    this.Newsletter == input.Newsletter ||
                    this.Newsletter.Equals(input.Newsletter)
                ) && 
                (
                    this.Birthday == input.Birthday ||
                    (this.Birthday != null &&
                    this.Birthday.Equals(input.Birthday))
                ) && 
                (
                    this.LastOrderDate == input.LastOrderDate ||
                    (this.LastOrderDate != null &&
                    this.LastOrderDate.Equals(input.LastOrderDate))
                ) && 
                (
                    this.OrderCount == input.OrderCount ||
                    this.OrderCount.Equals(input.OrderCount)
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    (this.CustomFields != null &&
                    this.CustomFields.Equals(input.CustomFields))
                ) && 
                (
                    this.TagIds == input.TagIds ||
                    this.TagIds != null &&
                    input.TagIds != null &&
                    this.TagIds.SequenceEqual(input.TagIds)
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.Group == input.Group ||
                    (this.Group != null &&
                    this.Group.Equals(input.Group))
                ) && 
                (
                    this.DefaultPaymentMethod == input.DefaultPaymentMethod ||
                    (this.DefaultPaymentMethod != null &&
                    this.DefaultPaymentMethod.Equals(input.DefaultPaymentMethod))
                ) && 
                (
                    this.Language == input.Language ||
                    (this.Language != null &&
                    this.Language.Equals(input.Language))
                ) && 
                (
                    this.LastPaymentMethod == input.LastPaymentMethod ||
                    (this.LastPaymentMethod != null &&
                    this.LastPaymentMethod.Equals(input.LastPaymentMethod))
                ) && 
                (
                    this.DefaultBillingAddress == input.DefaultBillingAddress ||
                    (this.DefaultBillingAddress != null &&
                    this.DefaultBillingAddress.Equals(input.DefaultBillingAddress))
                ) && 
                (
                    this.DefaultShippingAddress == input.DefaultShippingAddress ||
                    (this.DefaultShippingAddress != null &&
                    this.DefaultShippingAddress.Equals(input.DefaultShippingAddress))
                ) && 
                (
                    this.Salutation == input.Salutation ||
                    (this.Salutation != null &&
                    this.Salutation.Equals(input.Salutation))
                ) && 
                (
                    this.Addresses == input.Addresses ||
                    (this.Addresses != null &&
                    this.Addresses.Equals(input.Addresses))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GroupId != null)
                {
                    hashCode = (hashCode * 59) + this.GroupId.GetHashCode();
                }
                if (this.DefaultPaymentMethodId != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultPaymentMethodId.GetHashCode();
                }
                if (this.SalesChannelId != null)
                {
                    hashCode = (hashCode * 59) + this.SalesChannelId.GetHashCode();
                }
                if (this.LanguageId != null)
                {
                    hashCode = (hashCode * 59) + this.LanguageId.GetHashCode();
                }
                if (this.DefaultBillingAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultBillingAddressId.GetHashCode();
                }
                if (this.DefaultShippingAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultShippingAddressId.GetHashCode();
                }
                if (this.CustomerNumber != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerNumber.GetHashCode();
                }
                if (this.SalutationId != null)
                {
                    hashCode = (hashCode * 59) + this.SalutationId.GetHashCode();
                }
                if (this.FirstName != null)
                {
                    hashCode = (hashCode * 59) + this.FirstName.GetHashCode();
                }
                if (this.LastName != null)
                {
                    hashCode = (hashCode * 59) + this.LastName.GetHashCode();
                }
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.CreatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                }
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.LastPaymentMethodId != null)
                {
                    hashCode = (hashCode * 59) + this.LastPaymentMethodId.GetHashCode();
                }
                if (this.Company != null)
                {
                    hashCode = (hashCode * 59) + this.Company.GetHashCode();
                }
                if (this.Title != null)
                {
                    hashCode = (hashCode * 59) + this.Title.GetHashCode();
                }
                if (this.VatIds != null)
                {
                    hashCode = (hashCode * 59) + this.VatIds.GetHashCode();
                }
                if (this.AffiliateCode != null)
                {
                    hashCode = (hashCode * 59) + this.AffiliateCode.GetHashCode();
                }
                if (this.CampaignCode != null)
                {
                    hashCode = (hashCode * 59) + this.CampaignCode.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Active.GetHashCode();
                hashCode = (hashCode * 59) + this.DoubleOptInRegistration.GetHashCode();
                if (this.DoubleOptInEmailSentDate != null)
                {
                    hashCode = (hashCode * 59) + this.DoubleOptInEmailSentDate.GetHashCode();
                }
                if (this.DoubleOptInConfirmDate != null)
                {
                    hashCode = (hashCode * 59) + this.DoubleOptInConfirmDate.GetHashCode();
                }
                if (this.Hash != null)
                {
                    hashCode = (hashCode * 59) + this.Hash.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Guest.GetHashCode();
                if (this.FirstLogin != null)
                {
                    hashCode = (hashCode * 59) + this.FirstLogin.GetHashCode();
                }
                if (this.LastLogin != null)
                {
                    hashCode = (hashCode * 59) + this.LastLogin.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Newsletter.GetHashCode();
                if (this.Birthday != null)
                {
                    hashCode = (hashCode * 59) + this.Birthday.GetHashCode();
                }
                if (this.LastOrderDate != null)
                {
                    hashCode = (hashCode * 59) + this.LastOrderDate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.OrderCount.GetHashCode();
                if (this.CustomFields != null)
                {
                    hashCode = (hashCode * 59) + this.CustomFields.GetHashCode();
                }
                if (this.TagIds != null)
                {
                    hashCode = (hashCode * 59) + this.TagIds.GetHashCode();
                }
                if (this.UpdatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAt.GetHashCode();
                }
                if (this.Group != null)
                {
                    hashCode = (hashCode * 59) + this.Group.GetHashCode();
                }
                if (this.DefaultPaymentMethod != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultPaymentMethod.GetHashCode();
                }
                if (this.Language != null)
                {
                    hashCode = (hashCode * 59) + this.Language.GetHashCode();
                }
                if (this.LastPaymentMethod != null)
                {
                    hashCode = (hashCode * 59) + this.LastPaymentMethod.GetHashCode();
                }
                if (this.DefaultBillingAddress != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultBillingAddress.GetHashCode();
                }
                if (this.DefaultShippingAddress != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultShippingAddress.GetHashCode();
                }
                if (this.Salutation != null)
                {
                    hashCode = (hashCode * 59) + this.Salutation.GetHashCode();
                }
                if (this.Addresses != null)
                {
                    hashCode = (hashCode * 59) + this.Addresses.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // GroupId (string) pattern
            Regex regexGroupId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexGroupId.Match(this.GroupId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for GroupId, must match a pattern of " + regexGroupId, new [] { "GroupId" });
            }

            // DefaultPaymentMethodId (string) pattern
            Regex regexDefaultPaymentMethodId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexDefaultPaymentMethodId.Match(this.DefaultPaymentMethodId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DefaultPaymentMethodId, must match a pattern of " + regexDefaultPaymentMethodId, new [] { "DefaultPaymentMethodId" });
            }

            // SalesChannelId (string) pattern
            Regex regexSalesChannelId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexSalesChannelId.Match(this.SalesChannelId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SalesChannelId, must match a pattern of " + regexSalesChannelId, new [] { "SalesChannelId" });
            }

            // LanguageId (string) pattern
            Regex regexLanguageId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexLanguageId.Match(this.LanguageId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LanguageId, must match a pattern of " + regexLanguageId, new [] { "LanguageId" });
            }

            // DefaultBillingAddressId (string) pattern
            Regex regexDefaultBillingAddressId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexDefaultBillingAddressId.Match(this.DefaultBillingAddressId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DefaultBillingAddressId, must match a pattern of " + regexDefaultBillingAddressId, new [] { "DefaultBillingAddressId" });
            }

            // DefaultShippingAddressId (string) pattern
            Regex regexDefaultShippingAddressId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexDefaultShippingAddressId.Match(this.DefaultShippingAddressId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DefaultShippingAddressId, must match a pattern of " + regexDefaultShippingAddressId, new [] { "DefaultShippingAddressId" });
            }

            // SalutationId (string) pattern
            Regex regexSalutationId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexSalutationId.Match(this.SalutationId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SalutationId, must match a pattern of " + regexSalutationId, new [] { "SalutationId" });
            }

            // Id (string) pattern
            Regex regexId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexId.Match(this.Id).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Id, must match a pattern of " + regexId, new [] { "Id" });
            }

            // LastPaymentMethodId (string) pattern
            Regex regexLastPaymentMethodId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexLastPaymentMethodId.Match(this.LastPaymentMethodId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LastPaymentMethodId, must match a pattern of " + regexLastPaymentMethodId, new [] { "LastPaymentMethodId" });
            }

            yield break;
        }
    }

}
