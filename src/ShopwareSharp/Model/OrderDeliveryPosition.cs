// <auto-generated>
/*
 * Shopware Store API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.4.9999999.9999999-dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;

namespace ShopwareSharp.Model
{
    /// <summary>
    /// Added since version: 6.0.0.0
    /// </summary>
    public partial class OrderDeliveryPosition : IEquatable<OrderDeliveryPosition>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDeliveryPosition" /> class.
        /// </summary>
        /// <param name="orderDeliveryId">orderDeliveryId (required)</param>
        /// <param name="orderLineItemId">orderLineItemId (required)</param>
        /// <param name="createdAt">createdAt (required)</param>
        /// <param name="id">id</param>
        /// <param name="versionId">versionId</param>
        /// <param name="orderDeliveryVersionId">orderDeliveryVersionId</param>
        /// <param name="orderLineItemVersionId">orderLineItemVersionId</param>
        /// <param name="price">price</param>
        /// <param name="unitPrice">unitPrice</param>
        /// <param name="totalPrice">totalPrice</param>
        /// <param name="quantity">quantity</param>
        /// <param name="customFields">customFields</param>
        /// <param name="updatedAt">updatedAt</param>
        public OrderDeliveryPosition(string orderDeliveryId, string orderLineItemId, DateTime createdAt, string? id = default, string? versionId = default, string? orderDeliveryVersionId = default, string? orderLineItemVersionId = default, OrderShippingCosts? price = default, float? unitPrice = default, float? totalPrice = default, long? quantity = default, Object? customFields = default, DateTime? updatedAt = default)
        {
            if (orderDeliveryId == null)
                throw new ArgumentNullException("orderDeliveryId is a required property for OrderDeliveryPosition and cannot be null.");

            if (orderLineItemId == null)
                throw new ArgumentNullException("orderLineItemId is a required property for OrderDeliveryPosition and cannot be null.");

            if (createdAt == null)
                throw new ArgumentNullException("createdAt is a required property for OrderDeliveryPosition and cannot be null.");

            OrderDeliveryId = orderDeliveryId;
            OrderLineItemId = orderLineItemId;
            CreatedAt = createdAt;
            Id = id;
            VersionId = versionId;
            OrderDeliveryVersionId = orderDeliveryVersionId;
            OrderLineItemVersionId = orderLineItemVersionId;
            Price = price;
            UnitPrice = unitPrice;
            TotalPrice = totalPrice;
            Quantity = quantity;
            CustomFields = customFields;
            UpdatedAt = updatedAt;
        }

        /// <summary>
        /// Gets or Sets OrderDeliveryId
        /// </summary>
        [JsonPropertyName("orderDeliveryId")]
        public string OrderDeliveryId { get; set; }

        /// <summary>
        /// Gets or Sets OrderLineItemId
        /// </summary>
        [JsonPropertyName("orderLineItemId")]
        public string OrderLineItemId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [JsonPropertyName("createdAt")]
        public DateTime CreatedAt { get; private set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [JsonPropertyName("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Gets or Sets VersionId
        /// </summary>
        [JsonPropertyName("versionId")]
        public string? VersionId { get; set; }

        /// <summary>
        /// Gets or Sets OrderDeliveryVersionId
        /// </summary>
        [JsonPropertyName("orderDeliveryVersionId")]
        public string? OrderDeliveryVersionId { get; set; }

        /// <summary>
        /// Gets or Sets OrderLineItemVersionId
        /// </summary>
        [JsonPropertyName("orderLineItemVersionId")]
        public string? OrderLineItemVersionId { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [JsonPropertyName("price")]
        public OrderShippingCosts? Price { get; set; }

        /// <summary>
        /// Gets or Sets UnitPrice
        /// </summary>
        [JsonPropertyName("unitPrice")]
        public float? UnitPrice { get; set; }

        /// <summary>
        /// Gets or Sets TotalPrice
        /// </summary>
        [JsonPropertyName("totalPrice")]
        public float? TotalPrice { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [JsonPropertyName("quantity")]
        public long? Quantity { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [JsonPropertyName("customFields")]
        public Object? CustomFields { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [JsonPropertyName("updatedAt")]
        public DateTime? UpdatedAt { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDeliveryPosition {\n");
            sb.Append("  OrderDeliveryId: ").Append(OrderDeliveryId).Append("\n");
            sb.Append("  OrderLineItemId: ").Append(OrderLineItemId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  VersionId: ").Append(VersionId).Append("\n");
            sb.Append("  OrderDeliveryVersionId: ").Append(OrderDeliveryVersionId).Append("\n");
            sb.Append("  OrderLineItemVersionId: ").Append(OrderLineItemVersionId).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  UnitPrice: ").Append(UnitPrice).Append("\n");
            sb.Append("  TotalPrice: ").Append(TotalPrice).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object? input)
        {
            return this.Equals(input as OrderDeliveryPosition);
        }

        /// <summary>
        /// Returns true if OrderDeliveryPosition instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderDeliveryPosition to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderDeliveryPosition? input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.OrderDeliveryId == input.OrderDeliveryId ||
                    (this.OrderDeliveryId != null &&
                    this.OrderDeliveryId.Equals(input.OrderDeliveryId))
                ) && 
                (
                    this.OrderLineItemId == input.OrderLineItemId ||
                    (this.OrderLineItemId != null &&
                    this.OrderLineItemId.Equals(input.OrderLineItemId))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.VersionId == input.VersionId ||
                    (this.VersionId != null &&
                    this.VersionId.Equals(input.VersionId))
                ) && 
                (
                    this.OrderDeliveryVersionId == input.OrderDeliveryVersionId ||
                    (this.OrderDeliveryVersionId != null &&
                    this.OrderDeliveryVersionId.Equals(input.OrderDeliveryVersionId))
                ) && 
                (
                    this.OrderLineItemVersionId == input.OrderLineItemVersionId ||
                    (this.OrderLineItemVersionId != null &&
                    this.OrderLineItemVersionId.Equals(input.OrderLineItemVersionId))
                ) && 
                (
                    this.Price == input.Price ||
                    (this.Price != null &&
                    this.Price.Equals(input.Price))
                ) && 
                (
                    this.UnitPrice == input.UnitPrice ||
                    this.UnitPrice.Equals(input.UnitPrice)
                ) && 
                (
                    this.TotalPrice == input.TotalPrice ||
                    this.TotalPrice.Equals(input.TotalPrice)
                ) && 
                (
                    this.Quantity == input.Quantity ||
                    this.Quantity.Equals(input.Quantity)
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    (this.CustomFields != null &&
                    this.CustomFields.Equals(input.CustomFields))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OrderDeliveryId != null)
                {
                    hashCode = (hashCode * 59) + this.OrderDeliveryId.GetHashCode();
                }
                if (this.OrderLineItemId != null)
                {
                    hashCode = (hashCode * 59) + this.OrderLineItemId.GetHashCode();
                }
                if (this.CreatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                }
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.VersionId != null)
                {
                    hashCode = (hashCode * 59) + this.VersionId.GetHashCode();
                }
                if (this.OrderDeliveryVersionId != null)
                {
                    hashCode = (hashCode * 59) + this.OrderDeliveryVersionId.GetHashCode();
                }
                if (this.OrderLineItemVersionId != null)
                {
                    hashCode = (hashCode * 59) + this.OrderLineItemVersionId.GetHashCode();
                }
                if (this.Price != null)
                {
                    hashCode = (hashCode * 59) + this.Price.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.UnitPrice.GetHashCode();
                hashCode = (hashCode * 59) + this.TotalPrice.GetHashCode();
                hashCode = (hashCode * 59) + this.Quantity.GetHashCode();
                if (this.CustomFields != null)
                {
                    hashCode = (hashCode * 59) + this.CustomFields.GetHashCode();
                }
                if (this.UpdatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAt.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // OrderDeliveryId (string) pattern
            Regex regexOrderDeliveryId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexOrderDeliveryId.Match(this.OrderDeliveryId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderDeliveryId, must match a pattern of " + regexOrderDeliveryId, new [] { "OrderDeliveryId" });
            }

            // OrderLineItemId (string) pattern
            Regex regexOrderLineItemId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexOrderLineItemId.Match(this.OrderLineItemId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderLineItemId, must match a pattern of " + regexOrderLineItemId, new [] { "OrderLineItemId" });
            }

            // Id (string) pattern
            Regex regexId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexId.Match(this.Id).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Id, must match a pattern of " + regexId, new [] { "Id" });
            }

            // VersionId (string) pattern
            Regex regexVersionId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexVersionId.Match(this.VersionId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for VersionId, must match a pattern of " + regexVersionId, new [] { "VersionId" });
            }

            // OrderDeliveryVersionId (string) pattern
            Regex regexOrderDeliveryVersionId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexOrderDeliveryVersionId.Match(this.OrderDeliveryVersionId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderDeliveryVersionId, must match a pattern of " + regexOrderDeliveryVersionId, new [] { "OrderDeliveryVersionId" });
            }

            // OrderLineItemVersionId (string) pattern
            Regex regexOrderLineItemVersionId = new Regex(@"^[0-9a-f]{32}$", RegexOptions.CultureInvariant);
            if (false == regexOrderLineItemVersionId.Match(this.OrderLineItemVersionId).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrderLineItemVersionId, must match a pattern of " + regexOrderLineItemVersionId, new [] { "OrderLineItemVersionId" });
            }

            yield break;
        }
    }

}
