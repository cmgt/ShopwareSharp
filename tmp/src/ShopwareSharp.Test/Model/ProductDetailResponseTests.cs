/*
 * Shopware Store API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.4.9999999.9999999-dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ShopwareSharp.Api;
using ShopwareSharp.Model;
using ShopwareSharp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ShopwareSharp.Test.Model
{
    /// <summary>
    ///  Class for testing ProductDetailResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ProductDetailResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ProductDetailResponse
        //private ProductDetailResponse instance;

        public ProductDetailResponseTests()
        {
            // TODO uncomment below to create an instance of ProductDetailResponse
            //instance = new ProductDetailResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductDetailResponse
        /// </summary>
        [Fact]
        public void ProductDetailResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" ProductDetailResponse
            //Assert.IsType<ProductDetailResponse>(instance);
        }


        /// <summary>
        /// Test the property 'Product'
        /// </summary>
        [Fact]
        public void ProductTest()
        {
            // TODO unit test for the property 'Product'
        }
        /// <summary>
        /// Test the property 'Configurator'
        /// </summary>
        [Fact]
        public void ConfiguratorTest()
        {
            // TODO unit test for the property 'Configurator'
        }

    }

}
