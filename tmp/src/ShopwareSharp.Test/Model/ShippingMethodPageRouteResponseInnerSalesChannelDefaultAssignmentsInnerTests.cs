/*
 * Shopware Store API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.4.9999999.9999999-dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ShopwareSharp.Api;
using ShopwareSharp.Model;
using ShopwareSharp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ShopwareSharp.Test.Model
{
    /// <summary>
    ///  Class for testing ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInner
        //private ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInner instance;

        public ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInnerTests()
        {
            // TODO uncomment below to create an instance of ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInner
            //instance = new ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInner
        /// </summary>
        [Fact]
        public void ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInner
            //Assert.IsType<ShippingMethodPageRouteResponseInnerSalesChannelDefaultAssignmentsInner>(instance);
        }


        /// <summary>
        /// Test the property 'TypeId'
        /// </summary>
        [Fact]
        public void TypeIdTest()
        {
            // TODO unit test for the property 'TypeId'
        }
        /// <summary>
        /// Test the property 'LanguageId'
        /// </summary>
        [Fact]
        public void LanguageIdTest()
        {
            // TODO unit test for the property 'LanguageId'
        }
        /// <summary>
        /// Test the property 'CurrencyId'
        /// </summary>
        [Fact]
        public void CurrencyIdTest()
        {
            // TODO unit test for the property 'CurrencyId'
        }
        /// <summary>
        /// Test the property 'PaymentMethodId'
        /// </summary>
        [Fact]
        public void PaymentMethodIdTest()
        {
            // TODO unit test for the property 'PaymentMethodId'
        }
        /// <summary>
        /// Test the property 'ShippingMethodId'
        /// </summary>
        [Fact]
        public void ShippingMethodIdTest()
        {
            // TODO unit test for the property 'ShippingMethodId'
        }
        /// <summary>
        /// Test the property 'CountryId'
        /// </summary>
        [Fact]
        public void CountryIdTest()
        {
            // TODO unit test for the property 'CountryId'
        }
        /// <summary>
        /// Test the property 'NavigationCategoryId'
        /// </summary>
        [Fact]
        public void NavigationCategoryIdTest()
        {
            // TODO unit test for the property 'NavigationCategoryId'
        }
        /// <summary>
        /// Test the property 'NavigationCategoryDepth'
        /// </summary>
        [Fact]
        public void NavigationCategoryDepthTest()
        {
            // TODO unit test for the property 'NavigationCategoryDepth'
        }
        /// <summary>
        /// Test the property 'FooterCategoryId'
        /// </summary>
        [Fact]
        public void FooterCategoryIdTest()
        {
            // TODO unit test for the property 'FooterCategoryId'
        }
        /// <summary>
        /// Test the property 'ServiceCategoryId'
        /// </summary>
        [Fact]
        public void ServiceCategoryIdTest()
        {
            // TODO unit test for the property 'ServiceCategoryId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'ShortName'
        /// </summary>
        [Fact]
        public void ShortNameTest()
        {
            // TODO unit test for the property 'ShortName'
        }
        /// <summary>
        /// Test the property 'AccessKey'
        /// </summary>
        [Fact]
        public void AccessKeyTest()
        {
            // TODO unit test for the property 'AccessKey'
        }
        /// <summary>
        /// Test the property 'Active'
        /// </summary>
        [Fact]
        public void ActiveTest()
        {
            // TODO unit test for the property 'Active'
        }
        /// <summary>
        /// Test the property 'Maintenance'
        /// </summary>
        [Fact]
        public void MaintenanceTest()
        {
            // TODO unit test for the property 'Maintenance'
        }
        /// <summary>
        /// Test the property 'MaintenanceIpWhitelist'
        /// </summary>
        [Fact]
        public void MaintenanceIpWhitelistTest()
        {
            // TODO unit test for the property 'MaintenanceIpWhitelist'
        }
        /// <summary>
        /// Test the property 'MailHeaderFooterId'
        /// </summary>
        [Fact]
        public void MailHeaderFooterIdTest()
        {
            // TODO unit test for the property 'MailHeaderFooterId'
        }
        /// <summary>
        /// Test the property 'CustomerGroupId'
        /// </summary>
        [Fact]
        public void CustomerGroupIdTest()
        {
            // TODO unit test for the property 'CustomerGroupId'
        }
        /// <summary>
        /// Test the property 'HreflangActive'
        /// </summary>
        [Fact]
        public void HreflangActiveTest()
        {
            // TODO unit test for the property 'HreflangActive'
        }
        /// <summary>
        /// Test the property 'HreflangDefaultDomainId'
        /// </summary>
        [Fact]
        public void HreflangDefaultDomainIdTest()
        {
            // TODO unit test for the property 'HreflangDefaultDomainId'
        }

    }

}
