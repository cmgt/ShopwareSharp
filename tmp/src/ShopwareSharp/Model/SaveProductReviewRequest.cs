// <auto-generated>
/*
 * Shopware Store API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.4.9999999.9999999-dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;

namespace ShopwareSharp.Model
{
    /// <summary>
    /// SaveProductReviewRequest
    /// </summary>
    public partial class SaveProductReviewRequest : IEquatable<SaveProductReviewRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SaveProductReviewRequest" /> class.
        /// </summary>
        /// <param name="title">The title of the review. (required)</param>
        /// <param name="content">The content of review. (required)</param>
        /// <param name="points">The review rating for the product. (required)</param>
        /// <param name="name">The name of the review author. If not set, the first name of the customer is chosen.</param>
        /// <param name="email">The email address of the review author. If not set, the email of the customer is chosen.</param>
        public SaveProductReviewRequest(Object? title = default, Object? content = default, Object? points = default, string? name = default, string? email = default)
        {
            Title = title;
            Content = content;
            Points = points;
            Name = name;
            Email = email;
        }

        /// <summary>
        /// The title of the review.
        /// </summary>
        /// <value>The title of the review.</value>
        [JsonPropertyName("title")]
        public Object? Title { get; set; }

        /// <summary>
        /// The content of review.
        /// </summary>
        /// <value>The content of review.</value>
        [JsonPropertyName("content")]
        public Object? Content { get; set; }

        /// <summary>
        /// The review rating for the product.
        /// </summary>
        /// <value>The review rating for the product.</value>
        [JsonPropertyName("points")]
        public Object? Points { get; set; }

        /// <summary>
        /// The name of the review author. If not set, the first name of the customer is chosen.
        /// </summary>
        /// <value>The name of the review author. If not set, the first name of the customer is chosen.</value>
        [JsonPropertyName("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The email address of the review author. If not set, the email of the customer is chosen.
        /// </summary>
        /// <value>The email address of the review author. If not set, the email of the customer is chosen.</value>
        [JsonPropertyName("email")]
        public string? Email { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SaveProductReviewRequest {\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  Points: ").Append(Points).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object? input)
        {
            return this.Equals(input as SaveProductReviewRequest);
        }

        /// <summary>
        /// Returns true if SaveProductReviewRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of SaveProductReviewRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SaveProductReviewRequest? input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Content == input.Content ||
                    (this.Content != null &&
                    this.Content.Equals(input.Content))
                ) && 
                (
                    this.Points == input.Points ||
                    (this.Points != null &&
                    this.Points.Equals(input.Points))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Title != null)
                {
                    hashCode = (hashCode * 59) + this.Title.GetHashCode();
                }
                if (this.Content != null)
                {
                    hashCode = (hashCode * 59) + this.Content.GetHashCode();
                }
                if (this.Points != null)
                {
                    hashCode = (hashCode * 59) + this.Points.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
